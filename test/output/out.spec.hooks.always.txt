cypress/integration/afterLogs.spec.js:
    after fails -> the test 1
            cy:log (K): log test 1

    after fails -> the test 11
            cy:log (K): log test 11

    after fails -> [[ after all #1 ]]
            cy:log (K): after log simple
        cy:command (X): get	after simple

    after succeeds -> the test 2
            cy:log (K): log test 2

    after succeeds -> the test 22
            cy:log (K): log test 22

    after succeeds -> the test 222
            cy:log (K): log test 222

    after succeeds -> [[ after all #1 ]]
            cy:log (K): after 1

    after succeeds -> [[ after all #2 ]]
            cy:log (K): after 2

    nested after fails -> nested context -> the test 3
            cy:log (K): log test 3 nested

    nested after fails -> nested context -> [[ after all #1 ]]
        cy:command (X): get	after nested

    nested after fails -> [[ after all #1 ]]
            cy:log (K): log after root
        cy:command (X): get	after root



cypress/integration/allHooks.spec.js:
    All hooks. -> [[ before all #1 ]]
            cy:log (K): from before

    All hooks. -> passed it
            cy:log (K): from beforeEach
            cy:log (K): from it
            cy:log (K): from afterEach

    All hooks. -> passed it 2
            cy:log (K): from beforeEach
            cy:log (K): from it 2
            cy:log (K): from afterEach

    All hooks. -> [[ after all #1 ]]
            cy:log (K): from after

    All hooks. -> [[ after all #2 ]]
            cy:log (K): from after 2



cypress/integration/beforeLogs.spec.js:
    before fails -> [[ before all #1 ]]
            cy:log (K): some before command
        cy:command (X): get	.breaking.get

    before fails -> [[ after all #1 ]]
            cy:log (K): after

    before succeeds -> [[ before all #1 ]]
            cy:log (K): some before command
            cy:log (K): some other before command

    before succeeds -> [[ before all #2 ]]
            cy:log (K): some before command from second before hook

    before succeeds -> the test fails
            cy:log (K): log
        cy:command (X): get	.breaking.get

    before succeeds -> [[ after all #1 ]]
            cy:log (K): after before succeeds

    nested before fails -> [[ before all #1 ]]
            cy:log (K): some before command not in nested

    nested before fails -> not nested
            cy:log (K): not nested

    nested before fails -> nested context -> [[ before all #1 ]]
            cy:log (K): some before command in nested
        cy:command (X): get	.breaking.get

    nested before fails -> nested context -> [[ after all #1 ]]
            cy:log (K): after nested

    nested before fails -> [[ after all #1 ]]
            cy:log (K): after not nested

    Describe 1 -> Nested Describe -> [[ before all #1 ]]
            cy:log (K): Log 1
        cy:command (X): assert	Expect 1: expected **false** to be true



cypress/integration/mochaContexts.spec.js:
    main context -> first level test
        cy:command (X): get	.breaking-get 1

    main context -> second context -> second level test
        cy:command (X): get	.breaking-get 2

    main context -> second context -> third context -> third level test
        cy:command (X): get	.breaking-get 3

    unnested before with nested context -> [[ before all #1 ]]
            cy:log (K): before should display before nested context title

    unnested before with nested context -> nested context -> the test nested
            cy:log (K): log

    unnested before and test with nested context -> [[ before all #1 ]]
            cy:log (K): before should display before nested context title

    unnested before and test with nested context -> not nested
            cy:log (K): log

    unnested before and test with nested context -> nested context -> the test nested
            cy:log (K): log

    unnested failing before with nested context -> nested context -> [[ before all #1 ]]
        cy:command (X): get	before should display before nested context title

