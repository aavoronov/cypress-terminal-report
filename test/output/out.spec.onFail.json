{
  "cypress/integration/happyFlow.spec.js": {
    "Happy flow. -> Happy flow": [
      {
        "type": "cy:command",
        "message": "visit\t/commands/network-requests",
        "severity": "success"
      },
      {
        "type": "cy:intercept",
        "message": "Method: GET\nMatcher: \"comments/*\"",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "get\t.network-btn",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "click\t",
        "severity": "success"
      },
      {
        "type": "cy:xhr",
        "message": "(getComment) GET https://jsonplaceholder.cypress.io/comments/1\nStatus: 200",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "wait\t@getComment",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "its\t.response.statusCode",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "assert\texpected **200** to equal **200**\nActual: \t200\nExpected: \t200",
        "severity": "success"
      },
      {
        "type": "cy:intercept",
        "message": "Method: POST\nMatcher: \"/comments\"",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "get\t.network-post",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "click\t",
        "severity": "success"
      },
      {
        "type": "cy:xhr",
        "message": "(postComment) POST https://jsonplaceholder.cypress.io/comments\nStatus: 201",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "wait\t@postComment",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "assert\texpected **name=Using+POST+in+cy.intercept()&email=hello%40cypress.io&body=You+can+change+the+method+used+for+cy.intercept()+to+be+GET%2C+POST%2C+PUT%2C+PATCH%2C+or+DELETE** to include **email**",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "assert\texpected **{ Object (host, connection, ...) }** to have property **content-type**",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "assert\texpected **name=Using+POST+in+cy.intercept()&email=hello%40cypress.io&body=You+can+change+the+method+used+for+cy.intercept()+to+be+GET%2C+POST%2C+PUT%2C+PATCH%2C+or+DELETE** to include **name=Using+POST+in+cy.intercept()**",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "window\t",
        "severity": "success"
      },
      {
        "type": "cons:error",
        "message": "null,\nundefined,\n,\nfalse,\nfunction () {}",
        "severity": "error"
      },
      {
        "type": "cy:command",
        "message": "window\t",
        "severity": "success"
      },
      {
        "type": "cons:log",
        "message": "{\n  \"a\": \"b\"\n},\n{\n  \"c\": \"d\"\n},\n10,\nstring",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "window\t",
        "severity": "success"
      },
      {
        "type": "cons:warn",
        "message": "This is a warning message",
        "severity": "warning"
      },
      {
        "type": "cy:command",
        "message": "window\t",
        "severity": "success"
      },
      {
        "type": "cons:error",
        "message": "This is an error message",
        "severity": "error"
      },
      {
        "type": "cy:command",
        "message": "window\t",
        "severity": "success"
      },
      {
        "type": "cons:error",
        "message": "Error: This is an error message with stack.\n    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress/integration/happyFlow.spec.js:140:43)",
        "severity": "error"
      },
      {
        "type": "cy:command",
        "message": "window\t",
        "severity": "success"
      },
      {
        "type": "cons:log",
        "message": "This should console.log appear.",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "window\t",
        "severity": "success"
      },
      {
        "type": "cons:log",
        "message": "{\n  \"this\": \"Is an object\",\n  \"with\": {\n    \"keys\": 12512\n  }\n}",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "window\t",
        "severity": "success"
      },
      {
        "type": "cons:info",
        "message": "This should console.info appear.",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "window\t",
        "severity": "success"
      },
      {
        "type": "cons:debug",
        "message": "This should console.debug appear.",
        "severity": "success"
      },
      {
        "type": "cy:intercept",
        "message": "Matcher: {\"method\":\"PUT\",\"url\":\"comments/*\"}\nMocked Response: {\"statusCode\":404,\"body\":{\"error\":\"whoa, this comment does not exist\"},\"delayMs\":500}",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "get\t.network-put",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "click\t",
        "severity": "success"
      },
      {
        "type": "cy:xhr",
        "message": "(putComment) STUBBED PUT https://jsonplaceholder.cypress.io/comments/1\nStatus: 404\nResponse body: {\n  \"error\": \"whoa, this comment does not exist\"\n}",
        "severity": "warning"
      },
      {
        "type": "cy:command",
        "message": "wait\t@putComment",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "get\t.network-put-comment",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "assert\texpected **<div.network-put-comment>** to contain **whoa, this comment does not exist**",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "get\t.breaking-get",
        "severity": "error"
      }
    ]
  },
  "cypress/integration/mochaContexts.spec.js": {
    "main context -> first level test": [
      {
        "type": "cy:command",
        "message": "get\t.breaking-get 1",
        "severity": "error"
      }
    ],
    "main context -> second context -> second level test": [
      {
        "type": "cy:command",
        "message": "get\t.breaking-get 2",
        "severity": "error"
      }
    ],
    "main context -> second context -> third context -> third level test": [
      {
        "type": "cy:command",
        "message": "get\t.breaking-get 3",
        "severity": "error"
      }
    ]
  },
  "cypress/integration/requests.spec.js": {
    "Requests. -> GET 200": [
      {
        "type": "cy:request",
        "message": "https://jsonplaceholder.cypress.io/todos/1\nStatus: 200\nResponse body: {\n  \"userId\": 1,\n  \"id\": 1,\n  \"title\": \"delectus aut autem\",\n  \"completed\": false\n}",
        "severity": "success"
      },
      {
        "type": "cy:request",
        "message": "GET https://jsonplaceholder.cypress.io/todos/2\nStatus: 200\nResponse body: {\n  \"userId\": 1,\n  \"id\": 2,\n  \"title\": \"quis ut nam facilis et officia qui\",\n  \"completed\": false\n}",
        "severity": "success"
      },
      {
        "type": "cy:request",
        "message": "GET https://jsonplaceholder.cypress.io/todos/3\nStatus: 200\nResponse body: {\n  \"userId\": 1,\n  \"id\": 3,\n  \"title\": \"fugiat veniam minus\",\n  \"completed\": false\n}",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "get\t.breaking-get",
        "severity": "error"
      }
    ],
    "Requests. -> POST 200": [
      {
        "type": "cy:request",
        "message": "POST https://jsonplaceholder.cypress.io/comments\nStatus: 201\nResponse body: {\n  \"id\": 501\n}",
        "severity": "success"
      },
      {
        "type": "cy:command",
        "message": "get\t.breaking-get",
        "severity": "error"
      }
    ],
    "Requests. -> GET should give 500 response status": [
      {
        "type": "cy:request",
        "message": "GET http://localhost:3015/v3/4b2d23ec-4516-4a94-967e-995596d01a32\nStatus: 500 - Internal Server Error\nResponse body: Hey ya! Great to see you here. Btw, nothing is configured for this request path. Create a rule and start building a mock API.",
        "severity": "error"
      }
    ],
    "Requests. -> POST should give 400 response status": [
      {
        "type": "cy:request",
        "message": "POST http://localhost:3015/v3/57a00707-bccf-4653-ac50-ba1c00cad431\nStatus: 400 - Bad Request\nResponse body: {\n  \"status\": \"Wrong!\",\n  \"data\": {\n    \"corpo\": \"corpo da resposta\",\n    \"titulo\": \"titulo da resposta\"\n  }\n}",
        "severity": "error"
      }
    ],
    "Requests. -> PUT should fail": [
      {
        "type": "cy:request",
        "message": "PUT https://jsonplaceholder.cypress.io/comments\nStatus: 404 - Not Found\nResponse body: {}",
        "severity": "error"
      }
    ],
    "Requests. -> cypress logging is disabled in the request": [],
    "Requests. -> Network error": [
      {
        "type": "cy:request",
        "message": "POST http://this.does.not.exist\nNetwork error: getaddrinfo ENOTFOUND this.does.not.exist",
        "severity": "error"
      }
    ]
  }
}
